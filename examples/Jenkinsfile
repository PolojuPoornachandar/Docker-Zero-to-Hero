pipeline {
    agent any

    environment {
        AWS_REGION = 'us-west-1'
        ECR_REPO = '116981807202.dkr.ecr.us-west-1.amazonaws.com/chandu/my-docker-repo'
        S3_BUCKET = 'my-artifacts-webapp'
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    echo 'Cloning the repository...'
                    sh 'rm -rf Docker-Zero-to-Hero'
                    sh 'git clone --depth 1 --filter=blob:none --sparse https://github.com/PolojuPoornachandar/Docker-Zero-to-Hero.git'
                    sh 'cd Docker-Zero-to-Hero && git sparse-checkout init --cone'
                    sh 'cd Docker-Zero-to-Hero && git sparse-checkout set examples/first-docker-file'
                    echo 'Repository cloned successfully!'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker image...'
                    sh '''
                        cd Docker-Zero-to-Hero/examples/first-docker-file
                        docker build -t my-first-docker-image .
                    '''
                    echo 'Docker image built successfully!'
                }
            }
        }

        stage('Run Docker Container & Capture Output') {
            steps {
                script {
                    echo 'Running Docker container and capturing output...'
                    sh '''
                        cd Docker-Zero-to-Hero/examples/first-docker-file
                        # Run the Docker container and redirect the output of app.py to hello-world.txt
                        docker run --rm my-first-docker-image > hello-world.txt
                        cat hello-world.txt  # Print the output to verify content
                    '''
                    echo 'Docker container ran successfully and output captured!'
                }
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                script {
                    echo 'Pushing Docker image to ECR...'
                    sh '''
                        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO
                        docker tag my-first-docker-image:latest $ECR_REPO:latest
                        docker push $ECR_REPO:latest
                    '''
                    echo 'Docker image pushed to ECR successfully!'
                }
            }
        }

        stage('Upload Output to S3') {
            steps {
                script {
                    echo 'Uploading output to S3...'
                    sh '''
                        # Check if the file exists before uploading
                        if [ -f hello-world.txt ]; then
                            echo 'File exists, uploading to S3...'
                            aws s3 cp hello-world.txt s3://$S3_BUCKET/hello-world.txt --acl public-read
                            aws s3 ls s3://$S3_BUCKET/hello-world.txt
                        else
                            echo 'hello-world.txt file does not exist!'
                            exit 1
                        fi
                    '''
                    echo 'Output uploaded to S3 successfully!'
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline executed successfully!"
        }
        failure {
            echo "Pipeline failed!"
            echo "Check the logs for more details on the failure!"
        }
    }
}

